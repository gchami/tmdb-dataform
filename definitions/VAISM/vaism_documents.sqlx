config {
  type: "table",
  schema: dataform.projectConfig.vars.TARGET_DATA,
  description: "Vertex AI Search for Media (VAIS:M) Documents",
  dependOnDependencyAssertions: true,
  assertions: {
    uniqueKey: ["id"]
  },
  tags: ["VAISM"]
}


SELECT
    document_id AS id
  , 'default_schema' AS schemaId
  , parent_document_id AS parentDocumentId
    -- Remove any known properties that could result in NULL values and potentially fail the import
  , REGEXP_REPLACE(TO_JSON_STRING((SELECT AS STRUCT dt.* EXCEPT (document_id, parent_document_id)))
                 , r'([""]+(\w*)[""]:null,*)', '') AS jsonData
FROM (SELECT
          -- minimum 4 digit id required for data import
          FORMAT('%04d', m.id) AS document_id
        , CAST(NULL AS STRING) AS parent_document_id
        , m.title
        , m.overview AS description
        , 'en-US' AS language_code
--        , ...categories
        , m.homepage AS uri
        , ARRAY_CONCAT(IF(m.poster_image IS NOT NULL, [STRUCT('Poster Art' AS name, m.poster_image AS uri)], [])
                     , IF(m.backdrop_image IS NOT NULL, [STRUCT('Backdrop Art' AS name, m.backdrop_image AS uri)], [])) AS images
        , 'movie' AS media_type
        , ARRAY_CONCAT([m.original_language]) AS in_languages
        , m.origin_country[offset(0)] AS country_of_origin
--        , ...content_index
--        , ...filter_tags
        , FORMAT('%ds', m.runtime) AS duration
        , EXTRACT(YEAR FROM m.release_date) AS production_year
--        , ...content_rating
        , FORMAT_TIMESTAMP('%Y-%m-%dT%H:%M:%SZ', CAST(m.release_date AS TIMESTAMP)) AS availability_start_time
--        , ...aggregate_ratings
--        , ...persons
--        , ...hash_tags
      FROM ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "tmdb_movie" }) } AS m
     ) AS dt
